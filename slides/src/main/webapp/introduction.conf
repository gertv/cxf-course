h1. Planning

* Introduction
* JAX-WS
* JAX-RS

h1. Introduction

* About CXF
* CXF Terminology
* Setting up Spring and CXF

h1. About CXF

* Apache License
** business friendly open-source license
* History
** ObjectWeb's Celtix
** Codehaus' XFire

h1. About CXF

* Features and highlights:
** web service standards \\ (SOAP, WSDL, WS-*, ...)
** java standards: JAX-WS, JAX-RS \\ interoperates with SAAJ, JAXB, JBI, SCA, ...
** support for transports and bindings
** support for POJO and Spring
** tooling: WSDL Validator, code generator
** ease of use and flexible deployment

h1. CXF Terminology

* Bus
* Transport
* Data binding
* Interceptor
* Feature

h1. Bus

* 'Glue' to hold everything together:
** extensions
** features
** interceptor providers
* Configuration done here is active for all services

h1. Transport

* Multiple transport options
** HTTP
*** Asynchronous HTTP
*** Client HTTP
*** Jetty
*** Servlet
** JMS
** Local
** UDP
** Websocket

h1. Data binding

* Default is JAXB
* Support for:
** Aegis
** SDO
** XmlBeans
* MTOM

h1. Interceptor

* Fundamental processing unit in CXF
** Lot of functionality is configured through interceptors
** Add your own when necessary
* Collected in {{InterceptorChain}}s
* Phases
** {{RECEIVE}}, {{READ}}, {{UNMARSHAL}}, {{INVOKE}}, ...
** {{LOGICAL}}, {{WRITE}}, {{MARSHAL}}, {{STREAM}}, ...

h1. Feature

* Add capabilities to bus/server/client
* Examples:
** {{addressing}}
** {{failover}}
** {{logging}}
** {{policies}}
** {{reliableMessaging}}

{snippet:url=src/main/snippets/bus-with-logging.xml|pygmentize=true}
{snippet}

h1. Setting up Spring and CXF

* beans.xml : add namespace and import

{snippet:url=src/main/snippets/spring-skeleton.xml|pygmentize=true}
{snippet}

h1. Setting up Spring and CXF

* web.xml : Spring configuration

{snippet:url=src/main/snippets/spring-config-in-web.xml|pygmentize=true}
{snippet}

h1. Setting up Spring and CXF

* web.xml : CXF configuration

{snippet:url=src/main/snippets/cxf-config-in-web.xml|pygmentize=true}
{snippet}

